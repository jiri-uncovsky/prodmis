// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package osu.kip.prodmis.service.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import osu.kip.prodmis.domain.Organization;
import osu.kip.prodmis.repository.GlobalSearch;
import osu.kip.prodmis.repository.OrganizationRepository;
import osu.kip.prodmis.service.api.OrganizationService;
import osu.kip.prodmis.service.impl.OrganizationServiceImpl;

privileged aspect OrganizationServiceImpl_Roo_Service_Impl {
    
    declare parents: OrganizationServiceImpl implements OrganizationService;
    
    declare @type: OrganizationServiceImpl: @Service;
    
    declare @type: OrganizationServiceImpl: @Transactional(readOnly = true);
    
    public OrganizationRepository OrganizationServiceImpl.organizationRepository;
    
    @Autowired
    public OrganizationServiceImpl.new(OrganizationRepository organizationRepository) {
        this.organizationRepository = organizationRepository;
    }

    @Transactional(readOnly = false)
    public Organization OrganizationServiceImpl.save(Organization entity) {
        return organizationRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void OrganizationServiceImpl.delete(Long id) {
         organizationRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Organization> OrganizationServiceImpl.save(Iterable<Organization> entities) {
        return organizationRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void OrganizationServiceImpl.delete(Iterable<Long> ids) {
        List<Organization> toDelete = organizationRepository.findAll(ids);
        organizationRepository.deleteInBatch(toDelete);
    }
    
    public List<Organization> OrganizationServiceImpl.findAll() {
        return organizationRepository.findAll();
    }
    
    public List<Organization> OrganizationServiceImpl.findAll(Iterable<Long> ids) {
        return organizationRepository.findAll(ids);
    }
    
    public Organization OrganizationServiceImpl.findOne(Long id) {
        return organizationRepository.findOne(id);
    }
    
    public long OrganizationServiceImpl.count() {
        return organizationRepository.count();
    }
    
    public Page<Organization> OrganizationServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return organizationRepository.findAll(globalSearch, pageable);
    }
    
}
