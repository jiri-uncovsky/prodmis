// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package osu.kip.prodmis.service.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import osu.kip.prodmis.domain.Organization;
import osu.kip.prodmis.domain.UserLogin;
import osu.kip.prodmis.repository.GlobalSearch;
import osu.kip.prodmis.repository.UserLoginRepository;
import osu.kip.prodmis.service.api.UserLoginService;
import osu.kip.prodmis.service.impl.UserLoginServiceImpl;

privileged aspect UserLoginServiceImpl_Roo_Service_Impl {
    
    declare parents: UserLoginServiceImpl implements UserLoginService;
    
    declare @type: UserLoginServiceImpl: @Service;
    
    declare @type: UserLoginServiceImpl: @Transactional(readOnly = true);
    
    public UserLoginRepository UserLoginServiceImpl.userLoginRepository;
    
    @Autowired
    public UserLoginServiceImpl.new(UserLoginRepository userLoginRepository) {
        this.userLoginRepository = userLoginRepository;
    }

    @Transactional(readOnly = false)
    public UserLogin UserLoginServiceImpl.save(UserLogin entity) {
        return userLoginRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void UserLoginServiceImpl.delete(Long id) {
         userLoginRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<UserLogin> UserLoginServiceImpl.save(Iterable<UserLogin> entities) {
        return userLoginRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void UserLoginServiceImpl.delete(Iterable<Long> ids) {
        List<UserLogin> toDelete = userLoginRepository.findAll(ids);
        userLoginRepository.deleteInBatch(toDelete);
    }
    
    public List<UserLogin> UserLoginServiceImpl.findAll() {
        return userLoginRepository.findAll();
    }
    
    public List<UserLogin> UserLoginServiceImpl.findAll(Iterable<Long> ids) {
        return userLoginRepository.findAll(ids);
    }
    
    public UserLogin UserLoginServiceImpl.findOne(Long id) {
        return userLoginRepository.findOne(id);
    }
    
    public long UserLoginServiceImpl.count() {
        return userLoginRepository.count();
    }
    
    public Page<UserLogin> UserLoginServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return userLoginRepository.findAll(globalSearch, pageable);
    }
    
    public Long UserLoginServiceImpl.countByOrganizationId(Long id) {
        return userLoginRepository.countByOrganizationId(id);
    }
    
    public Page<UserLogin> UserLoginServiceImpl.findAllByOrganization(Organization organizationField, GlobalSearch globalSearch, Pageable pageable) {
        return userLoginRepository.findAllByOrganization(organizationField, globalSearch, pageable);
    }
    
}
