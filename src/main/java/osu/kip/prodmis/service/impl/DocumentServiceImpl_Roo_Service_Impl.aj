// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package osu.kip.prodmis.service.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import osu.kip.prodmis.domain.Document;
import osu.kip.prodmis.domain.Product;
import osu.kip.prodmis.domain.UserLogin;
import osu.kip.prodmis.repository.DocumentRepository;
import osu.kip.prodmis.repository.GlobalSearch;
import osu.kip.prodmis.service.api.DocumentService;
import osu.kip.prodmis.service.impl.DocumentServiceImpl;

privileged aspect DocumentServiceImpl_Roo_Service_Impl {
    
    declare parents: DocumentServiceImpl implements DocumentService;
    
    declare @type: DocumentServiceImpl: @Service;
    
    declare @type: DocumentServiceImpl: @Transactional(readOnly = true);
    
    public DocumentRepository DocumentServiceImpl.documentRepository;
    
    @Autowired
    public DocumentServiceImpl.new(DocumentRepository documentRepository) {
        this.documentRepository = documentRepository;
    }

    @Transactional(readOnly = false)
    public Document DocumentServiceImpl.save(Document entity) {
        return documentRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void DocumentServiceImpl.delete(Long id) {
         documentRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Document> DocumentServiceImpl.save(Iterable<Document> entities) {
        return documentRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void DocumentServiceImpl.delete(Iterable<Long> ids) {
        List<Document> toDelete = documentRepository.findAll(ids);
        documentRepository.deleteInBatch(toDelete);
    }
    
    public List<Document> DocumentServiceImpl.findAll() {
        return documentRepository.findAll();
    }
    
    public List<Document> DocumentServiceImpl.findAll(Iterable<Long> ids) {
        return documentRepository.findAll(ids);
    }
    
    public Document DocumentServiceImpl.findOne(Long id) {
        return documentRepository.findOne(id);
    }
    
    public long DocumentServiceImpl.count() {
        return documentRepository.count();
    }
    
    public Page<Document> DocumentServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return documentRepository.findAll(globalSearch, pageable);
    }
    
    public Long DocumentServiceImpl.countByProductId(Long id) {
        return documentRepository.countByProductId(id);
    }
    
    public Long DocumentServiceImpl.countByCreatedById(Long id) {
        return documentRepository.countByCreatedById(id);
    }
    
    public Page<Document> DocumentServiceImpl.findAllByProduct(Product productField, GlobalSearch globalSearch, Pageable pageable) {
        return documentRepository.findAllByProduct(productField, globalSearch, pageable);
    }
    
    public Page<Document> DocumentServiceImpl.findAllByUserLogin(UserLogin userLoginField, GlobalSearch globalSearch, Pageable pageable) {
        return documentRepository.findAllByUserLogin(userLoginField, globalSearch, pageable);
    }
    
}
